# Check connectivity using
#CONNECTIVITY_CHECK_URIS = "https://www.google.com/"
# Skip connectivity checks
CONNECTIVITY_CHECK_URIS = ""

# Download configuration
# --------------------------------------------------- #
#DL_DIR = "/home/build/downloads-sumo"
DL_DIR = "/home/build/downloads-dunfell"
# --------------------------------------------------- #

# Compile configuration
# --------------------------------------------------- #
BB_NUMBER_THREADS = "12"
PARALLEL_MAKE = "-j 1"
BUILD_DEBUG="0"
#SELECTED_OPTIMIZATION="-O2 -pipe ${DEBUG_FLAGS}"
#SELECTED_OPTIMIZATION = "-O2 -pipe"
SELECTED_OPTIMIZATION = "-O2 -pipe"
# --------------------------------------------------- #

# SDK configuration
# --------------------------------------------------- #
SDKMACHINE = "x86_64"
# --------------------------------------------------- #


# Machine
#MACHINE ?= "qemuarm"
#MACHINE ?= "qemuarm64"
#MACHINE ?= "qemumips"
#MACHINE ?= "qemumips64"
#MACHINE ?= "qemuppc"
#MACHINE ?= "qemux86"
#MACHINE ?= "qemux86-64"
#MACHINE = "imx53qsb"
#MACHINE = "picozed-zynq7"
#MACHINE = "imx28evk"
MACHINE_FEATURES_BACKFILL_CONSIDERED_append = " alsa touchscreen  wifi bluetooth"
MACHINE_FEATURES_BACKFILL_CONSIDERED_append = " qemu-usermode"


DISTRO = "poky"
DISTRO = "ik-tiny"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"

ACCEPT_FSL_EULA = "1"
CONF_VERSION = "1"

# Disk Space Monitoring during the build
BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K \
    ABORT,/tmp,10M,1K"
# --------------------------------------------------- #


# Distro configuration
# --------------------------------------------------- #

# Locale configuration
#DISTRO_FEATURES_LIBC_append=" libc-locales libc-locale-code"
#DISTRO_FEATURES_append=" ${DISTRO_FEATURES_LIBC}"
#GLIBC_GENERATE_LOCALES = "en_US.UTF-8 ru_RU.UTF-8"
#IMAGE_LINGUAS = "en-us ru-ru"
## (Useful if the target device has 64Mbytes of RAM or less)
#ENABLE_BINARY_LOCALE_GENERATION = "1"

#DISTRO_FEATURES_LIBC_remove=" libc-locales libc-locale-code"
IMAGE_LINGUAS = "ru-ru"
GLIBC_GENERATE_LOCALES = "ru_RU.UTF-8"
ENABLE_BINARY_LOCALE_GENERATION = "1"
# --------------------------------------------------- #

# Image configuration
# --------------------------------------------------- #
#PACKAGE_CLASSES = "package_rpm"
#PACKAGE_CLASSES = "package_deb"
PACKAGE_CLASSES = "package_ipk"

#IMAGE_FSTYPES = "ext3 ext4 tar.gz tar.bz2 wic.vmdk wic.vdi wic.qcow2"

#KERNEL_IMAGETYPE = "uImage"
#KERNEL_IMAGETYPE = "zImage"
# --------------------------------------------------- #

# Recipes configuration
# --------------------------------------------------- #
# Disable sdl
PACKAGECONFIG_remove_pn-qemu-native = " sdl"
PACKAGECONFIG_remove_pn-nativesdk-qemu = " sdl"

# QtCore Minimal Configuration
PACKAGECONFIG_pn-qtbase_remove=" static debug developer tests examples tools directfb linuxfb kms gbm widgets accessibility jpeg libpng gif ico pcre eglfs gl gles2 tslib cups dbus xcb xcb-xinput iconv xkb xkbcommon evdev mtdev lttng fontconfig gtk icu udev libinput journald getentropy sql-ibase sql-mysql sql-psql sql-odbc sql-oci sql-tds sql-db2 sql-sqlite2"
PACKAGECONFIG_pn-qtbase_append=" glib release optimize-size ltcg libs no-opengl zlib openssl sql-sqlite libproxy"
PACKAGECONFIG_CONFARGS_pn-qtbase_append=" -no-gui -no-freetype -no-harfbuzz -no-pcre"
PACKAGECONFIG_CONFARGS_pn-qtbase_append=" -no-feature-pdf -no-feature-textodfwriter -no-feature-textmarkdownreader -no-feature-textmarkdownwriter"

# Qt declarative
PACKAGECONFIG_pn-qtdeclarative_remove=" examples qml-debug qml-network qtquickcompiler static tests"

# Qt SerialPort
PACKAGECONFIG_pn-qtserialport_remove=" examples qtquickcompiler tests"

# Qt XMLpatterns
PACKAGECONFIG_pn-qtxmlpatterns_remove = " examples qtquickcompiler tests"
