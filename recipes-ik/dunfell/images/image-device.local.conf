# Check connectivity using
#CONNECTIVITY_CHECK_URIS = "https://www.google.com/"
# Skip connectivity checks
CONNECTIVITY_CHECK_URIS = ""

# Download configuration
# --------------------------------------------------- #
#DL_DIR = "/home/build/downloads-pyro"
#DL_DIR = "/home/build/downloads-sumo"
#DL_DIR = "/home/build/downloads-zeus"
DL_DIR = "/home/build/downloads-dunfell"
# --------------------------------------------------- #

# Compile configuration
# --------------------------------------------------- #
BB_NUMBER_THREADS = "12"
PARALLEL_MAKE = "-j 1"
BUILD_DEBUG="0"
#SELECTED_OPTIMIZATION="-O2 -pipe ${DEBUG_FLAGS}"
#SELECTED_OPTIMIZATION = "-O2 -pipe"
SELECTED_OPTIMIZATION = "-O2 -pipe"
# --------------------------------------------------- #

# SDK configuration
# --------------------------------------------------- #
SDKMACHINE = "x86_64"
# --------------------------------------------------- #

# Machine
#MACHINE_FEATURES_BACKFILL_CONSIDERED_append = " bluetooth"
#MACHINE_FEATURES_BACKFILL_CONSIDERED_append = " qemu-usermode"
MACHINE = "cortexa8"


DISTRO = "void"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"

ACCEPT_FSL_EULA = "1"
CONF_VERSION = "1"

# Disk Space Monitoring during the build
BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K \
    ABORT,/tmp,10M,1K"
# --------------------------------------------------- #


# Distro configuration
# --------------------------------------------------- #

# Locale configuration
IMAGE_LINGUAS = "ru-ru"
GLIBC_GENERATE_LOCALES = "ru_RU.UTF-8"
#ENABLE_BINARY_LOCALE_GENERATION = "1"
# --------------------------------------------------- #

# Image configuration
# --------------------------------------------------- #
#PACKAGE_CLASSES = "package_rpm"
#PACKAGE_CLASSES = "package_deb"
PACKAGE_CLASSES = "package_ipk"

IMAGE_FSTYPES = "tar.gz"
# --------------------------------------------------- #

# Recipes configuration
# --------------------------------------------------- #
# Disable sdl
PACKAGECONFIG_remove_pn-qemu-native = " sdl"
PACKAGECONFIG_remove_pn-nativesdk-qemu = " sdl"

# QtBase Configuration
PACKAGECONFIG_pn-qtbase_remove=" static debug developer tests examples tools directfb kms gbm accessibility jpeg gif ico pcre eglfs gl gles2 cups dbus xcb xcb-xinput xkb xkbcommon evdev mtdev lttng gtk icu libinput journald getentropy sql-ibase sql-mysql sql-psql sql-odbc sql-oci sql-tds sql-db2 sql-sqlite2"
PACKAGECONFIG_pn-qtbase_append=" glib release optimize-size ltcg libs no-opengl zlib openssl sql-sqlite"
PACKAGECONFIG_pn-qtbase_append=" linuxfb udev widgets freetype fontconfig libpng iconv"
PACKAGECONFIG_pn-qtbase_append=" tslib"

# Qt declarative
PACKAGECONFIG_pn-qtdeclarative_remove=" examples qml-debug qml-network qtquickcompiler static tests"

# Qt SerialPort
PACKAGECONFIG_pn-qtserialport_remove=" examples qtquickcompiler tests"

# Qt XMLpatterns
PACKAGECONFIG_pn-qtxmlpatterns_remove = " examples qtquickcompiler tests"

# Qt Multimedia
PACKAGECONFIG_pn-qtmultimedia_remove=" examples gstreamer010 openal pulseaudio qtquickcompiler tests"
PACKAGECONFIG_pn-qtmultimedia_append=" alsa gstreamer"

# GStreamer
PACKAGECONFIG_pn-gstreamer1.0_remove=" debug tests valgrind"
PACKAGECONFIG_pn-gstreamer1.0-plugins-base_remove=" debug gio-unix-2.0 ivorbis opus orc pango theora valgrind visual x11"
PACKAGECONFIG_pn-gstreamer1.0-plugins-base_append=" alsa ogg vorbis"

# Proftpd
PACKAGECONFIG_pn-proftpd_remove=" acl cap ctrls curses dso getopt nls pam pcre sendfile sia"
PACKAGECONFIG_pn-proftpd_append = " auth shadow ipv6 largefile openssl strip"

# TSLib
PACKAGECONFIG_pn-tslib_append=" debounce dejitter iir linear median pthres skip lowpass invert variance input touchkit waveshare"
