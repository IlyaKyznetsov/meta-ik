# Download configuration
# --------------------------------------------------- #
#DL_DIR = "/home/build/downloads-sumo"
DL_DIR = "/home/build/downloads-dunfell"
# --------------------------------------------------- #


# Compile configuration
# --------------------------------------------------- #
BB_NUMBER_THREADS = "12"
PARALLEL_MAKE = "-j 1"
BUILD_DEBUG="0"
#SELECTED_OPTIMIZATION="-O2 -pipe ${DEBUG_FLAGS}"
#SELECTED_OPTIMIZATION = "-O2 -pipe"
SELECTED_OPTIMIZATION = "-O2 -pipe"
# --------------------------------------------------- #


# SDK configuration
# --------------------------------------------------- #
SDKMACHINE = "x86_64"
# --------------------------------------------------- #


# Yocto configuration
# --------------------------------------------------- #
#
# Machine Selection
#
# You need to select a specific machine to target the build with. There are a selection
# of emulated machines available which can boot and run in the QEMU emulator:
#
#MACHINE ?= "qemuarm"
#MACHINE ?= "qemuarm64"
#MACHINE ?= "qemumips"
#MACHINE ?= "qemumips64"
#MACHINE ?= "qemuppc"
#MACHINE ?= "qemux86"
#MACHINE ?= "qemux86-64"

#MACHINE = "imx53qsb"
MACHINE = "imx28evk"
DISTRO = "poky"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"

ACCEPT_FSL_EULA = "1"
CONF_VERSION = "1"

# Disk Space Monitoring during the build
BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K \
    ABORT,/tmp,10M,1K"
# --------------------------------------------------- #


# Distro configuration
# --------------------------------------------------- #

TCLIBC = "glibc"
#TCLIBC = "musl"
#TCLIBC = "newlib"
#TCLIBC = "baremetal"

# Base distro features
DISTRO_FEATURES="${DISTRO_FEATURES_DEFAULT}"
DISTRO_FEATURES_remove = " bluetooth bluez5 irda pcmcia pci nfc wifi nfs pulseaudio wayland vulkan systemd gl dbus 3g"
DISTRO_FEATURES_append = " glib udev sql-sqlite zeroconf openssl alsa"
# --------------------------------------------------- #

# LinuxFB configuration
DISTRO_FEATURES_remove = " directfb opengl x11 xcb xcb-xinput xkb xkbcommon"
#DISTRO_FEATURES_append = " linuxfb"
DISTRO_FEATURES_remove = " linuxfb"
# --------------------------------------------------- #

# Locale configuration
DISTRO_FEATURES_LIBC_append=" libc-locales libc-locale-code"
DISTRO_FEATURES_append=" ${DISTRO_FEATURES_LIBC}"
GLIBC_GENERATE_LOCALES = "en_US.UTF-8 ru_RU.UTF-8"
IMAGE_LINGUAS = "en-us ru-ru"
# (Useful if the target device has 64Mbytes of RAM or less)
ENABLE_BINARY_LOCALE_GENERATION = "1"
# --------------------------------------------------- #

# Image configuration
# --------------------------------------------------- #
#PACKAGE_CLASSES = "package_rpm"
PACKAGE_CLASSES = "package_ipk"
#PACKAGE_CLASSES = "package_deb"

#IMAGE_FSTYPES = "ext3 ext4 tar.gz tar.bz2 wic.vmdk wic.vdi wic.qcow2"
#IMAGE_FSTYPES = "tar.gz wic.qcow2"
IMAGE_FSTYPES = "tar.gz"

#KERNEL_IMAGETYPE = "uImage"
#KERNEL_IMAGETYPE = "zImage"
# --------------------------------------------------- #

# Recipes configuration
# --------------------------------------------------- #
# Disable sdl
PACKAGECONFIG_remove_pn-qemu-native = " sdl"
PACKAGECONFIG_remove_pn-nativesdk-qemu = " sdl"

# QtCore Minimal Configuration
PACKAGECONFIG_pn-qtbase_remove=" static debug developer tests examples tools directfb linuxfb kms gbm widgets accessibility jpeg libpng gif ico pcre eglfs gl gles2 tslib cups dbus xcb xcb-xinput iconv xkb xkbcommon evdev mtdev lttng fontconfig gtk icu udev libinput journald getentropy \
sql-ibase sql-mysql sql-psql sql-odbc sql-oci sql-tds sql-db2 sql-sqlite2"
PACKAGECONFIG_pn-qtbase_append=" release optimize-size ltcg libs glib no-opengl zlib openssl sql-sqlite libproxy"
PACKAGECONFIG_CONFARGS_pn-qtbase_append=" -no-gui -no-freetype -no-harfbuzz -no-pcre"
PACKAGECONFIG_CONFARGS_pn-qtbase_append=" -no-feature-pdf -no-feature-textodfwriter -no-feature-textmarkdownreader -no-feature-textmarkdownwriter"


# Qt declarative
PACKAGECONFIG_pn-qtdeclarative_remove=" examples qml-debug qml-network qtquickcompiler static tests"

# Qt SerialPort
PACKAGECONFIG_pn-qtserialport_remove=" examples qtquickcompiler tests"

# Qt XMLpatterns
PACKAGECONFIG_pn-qtxmlpatterns_remove = " examples qtquickcompiler tests"

# Qt Multimedia
#PACKAGECONFIG_pn-qtmultimedia_remove=" examples gstreamer010 openal pulseaudio qtquickcompiler tests"
#PACKAGECONFIG_pn-qtmultimedia_append=" alsa gstreamer"
